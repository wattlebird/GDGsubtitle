1
00:00:00,490 --> 00:00:01,260
我们来复习一下
Let's review.

2
00:00:01,260 --> 00:00:04,080
至今为止 我们知道了线性布局可以设定方向
So far we've learned that a linear layout can have an orientation that's

3
00:00:04,080 --> 00:00:06,890
水平或是垂直
horizontal or vertical.

4
00:00:06,890 --> 00:00:09,610
但是且让我们再想想这些布局是否充分利用了
But now let's think about whether these views are taking full advantage of

5
00:00:09,610 --> 00:00:11,240
屏幕的地皮
the screen real estate.

6
00:00:11,240 --> 00:00:14,930
当我说“地皮”的时候 我是说屏幕的可利用空间
When I say real estate, I mean the available space on the screen.

7
00:00:14,930 --> 00:00:16,490
拿我们的Nexus6来说
For our Nexus 6 phone,

8
00:00:16,490 --> 00:00:20,740
我们在一个线性布局里面有三个TextView
say we have a vertical linear layout that has three child text views inside.

9
00:00:20,740 --> 00:00:22,420
其为Tom Tim 和Todd
Tom, Tim and Todd.

10
00:00:22,420 --> 00:00:25,500
当我们像这样垂直地把设备握在手里时
When we hold the device in portrait mode like this in our hand,

11
00:00:25,500 --> 00:00:29,380
所有的TextView就都聚集在屏幕的左上角
then all the text views are grouped in the top left corner of the screen.

12
00:00:29,380 --> 00:00:32,320
这些就是所有没有用到的空白区域
There's all this blank space left unused.

13
00:00:32,320 --> 00:00:35,480
相似地 如果我们把设备旋转到水平模式
Similarly, if we rotated the device to Landscape mode,

14
00:00:35,480 --> 00:00:40,120
文字就会在左上角 这边则是所有剩下的空白区域
then the text is on the top left corner and there's all this blank space left.

15
00:00:40,120 --> 00:00:42,110
在平板设备上更为明显
It's even more noticeable on a tablet device,

16
00:00:42,110 --> 00:00:44,260
因为平板更大
where the screen is a lot bigger.

17
00:00:44,260 --> 00:00:47,280
我们只使用屏幕的一小块地皮
We're only using a small amount of the screen real estate, and

18
00:00:47,280 --> 00:00:48,252
剩下的就是空白
the rest of it is blank.

19
00:00:48,252 --> 00:00:51,680
我们将会学习到怎么更为均衡地平铺这些View
We're going to learn about how we can more equally spread out these views

20
00:00:51,680 --> 00:00:55,190
以更好地利用空余空间
across the screen to take up more of the available room.

21
00:00:55,190 --> 00:00:56,560
这对其他View来说 也同样适用
This applies to other views as well.

22
00:00:56,560 --> 00:00:59,500
你可以把图片占据整个屏幕空间
You can have bigger images across the screen for

23
00:00:59,500 --> 00:01:04,489
以获得更好地用户体验 而非放在左上角
a better experience, instead of having them really tiny in the top left corner.

24
00:01:04,489 --> 00:01:05,180
按钮同理
Same with buttons,

25
00:01:05,180 --> 00:01:09,785
你可以搞一些大一点的按钮方便按上去
you could have bigger buttons so that it's easier To tap on those buttons.

26
00:01:09,785 --> 00:01:13,155
为了举例方便 我们将专注于TextView
For the purposes of our example, we're going to stick with text views.

27
00:01:13,155 --> 00:01:16,325
我们前往XML可视化器看看怎么布局
So let's go to the XML visualizer to figure out how we can spread out

28
00:01:16,325 --> 00:01:18,115
这些View
these views.

29
00:01:18,115 --> 00:01:20,545
这就是Tom Tim 和Todd 的代码
So here's the code for Tom, Tim, and Todd.

30
00:01:20,545 --> 00:01:23,975
我在垂直线性布局里面有三个TextView
I have three text views within a vertical linear layout and

31
00:01:23,975 --> 00:01:26,570
这就是他们在设备上的样子
this is what they look like on the device.

32
00:01:26,570 --> 00:01:29,810
现在 我想让你看看怎么布局这三个TextView
Now, I want to show you how you can spread out these three text views.

33
00:01:29,810 --> 00:01:31,060
Tom在这里
So that Tom is up here.

34
00:01:31,060 --> 00:01:31,980
Tim在这里
Tim is here.

35
00:01:31,980 --> 00:01:33,910
Todd在这里
And Todd is down here.

36
00:01:33,910 --> 00:01:37,950
显然 把高度设为wrap_context没有用
Clearly, setting height for wrap_content is not doing the job.

37
00:01:37,950 --> 00:01:41,350
另一个我们可以做的事情就是给高度设定一个固定的dp值
The other thing we learned is to set a fixed dp value for the height.

38
00:01:41,350 --> 00:01:45,760
那么我就给高度设定为200dp
So I'm going to set the height to be, for example, 200dp.

39
00:01:45,760 --> 00:01:48,340
好 这给Tom留出了很大一部分空间
Cool. So that left a lot more space for Tom.

40
00:01:48,340 --> 00:01:51,320
如果我对其他的TextView也做同样的事情
If I do the same for the other TextViews,

41
00:01:51,320 --> 00:01:54,570
他们就会在屏幕上均衡地分布
then they also spread out more evenly across the screen.

42
00:01:54,570 --> 00:01:57,920
但是这只是对一个设备起作用
But this solution will only work for the sides of a device.

43
00:01:57,920 --> 00:02:01,510
如果我有一个平板 这些View
If I have a tablet like I showed you earlier, then these views are still

44
00:02:01,510 --> 00:02:04,640
还将会在左上角聚集
going to be grouped in somewhat of the top left corner.

45
00:02:04,640 --> 00:02:08,880
另一个设定高度的方法是我们先前学到的match_parent
The other option for setting height is match parent which we learned earlier.

46
00:02:08,880 --> 00:02:11,750
当你为Tom设定match_parent的时候
When you set match parent for the Tom TextView

47
00:02:11,750 --> 00:02:15,540
它就会和整个屏幕的高度一样
it takes the height of the whole parent which is a whole screen.

48
00:02:15,540 --> 00:02:19,230
这就把其他TextView推到了屏幕之外
That pushes the other text views off the screen so you can't even see them.

49
00:02:19,230 --> 00:02:20,930
最好不要那么做
So let's not do that.

50
00:02:20,930 --> 00:02:23,870
我们已经没有办法了 因为我们试过了wrap_content
Well now we're out of ideas because we tried wrap content for

51
00:02:23,870 --> 00:02:25,490
设定固定的dp值
the height, which had a fixed DP value.

52
00:02:25,490 --> 00:02:27,300
还有match_parent
And we tried match parent.

53
00:02:27,300 --> 00:02:32,930
没有一个能够给出适用于所有设备的布局方案
And none of those give us the right spacing across all different devices.

54
00:02:32,930 --> 00:02:36,420
我们就Google一下 查找可能的解决方案
Let's Google search for a potential solution to this problem.

55
00:02:36,420 --> 00:02:38,360
我们使用线性布局的ViewGroup
We're using a linear layout view group.

56
00:02:38,360 --> 00:02:40,580
我们想要均衡分布子元素
And we want to equally space out the children views.

57
00:02:40,580 --> 00:02:42,260
我们搜一下
So let's search for that.

58
00:02:42,260 --> 00:02:44,680
好 现在有一堆搜索结果了
Okay, so there's a bunch of search results, but

59
00:02:44,680 --> 00:02:46,920
让我们点击第一个
let's click on this first one.

60
00:02:46,920 --> 00:02:49,358
这是一个StackOverflow的链接
This is a link to the Stackoverflow site.

61
00:02:49,358 --> 00:02:51,780
这是一个从其他Android开发者里获取答案的
It's a Q&amp;A site where you can post questions and

62
00:02:51,780 --> 00:02:53,785
问答社区
get answers from other Android developers.

63
00:02:53,785 --> 00:02:58,005
当我有问题的时候我总会使用它
I use it all the time when I'm stuck and I need help on a problem.

64
00:02:58,005 --> 00:03:00,515
更通常的是 其他人已经问了一个
Often times other people will have already asked a question

65
00:03:00,515 --> 00:03:01,975
我有的同样的问题
that I'm having.

66
00:03:01,975 --> 00:03:05,425
这个问题是怎么均衡地在线性布局上
So this question here is about how to evenly distribute buttons

67
00:03:05,425 --> 00:03:07,657
等宽度地放置按钮
across the width of a linear layout.

68
00:03:07,657 --> 00:03:09,677
这和我们正在寻找的答案相似
This is similar to what we're looking for,

69
00:03:09,677 --> 00:03:12,627
除了按钮这一点 我们是TextView
except instead of buttons we're working with text views.

70
00:03:12,627 --> 00:03:15,877
还有这里是线性布局的宽度 我们要处理的是
And instead of the width of the linear layout we're trying to spread it across

71
00:03:15,877 --> 00:03:17,767
在高度上均衡分布
the height of the linear layout.

72
00:03:17,767 --> 00:03:20,710
我们可以通读问题
We can read through the question or we can skim it.

73
00:03:20,710 --> 00:03:23,070
通常我只跳到答案
Usually I just skim for the answer.

74
00:03:23,070 --> 00:03:27,590
这个解答得到了88个投票并且已被采纳
So this solution received 88 votes and has a green checkmark on it.

75
00:03:27,590 --> 00:03:30,840
这个是教你设置layout_width到0dp
It talks about how you can set layout_width to 0dp and

76
00:03:30,840 --> 00:03:33,240
并且把layout_weight设置为1
set the layout_weight for each of the buttons to be 1.

77
00:03:33,240 --> 00:03:37,910
这就把可用的宽度均衡地划分给按钮
And that splits the available width equally across the buttons.

78
00:03:37,910 --> 00:03:41,170
你可能目前还不完全理解这个答案 这没关系
You may not fully understand the answer at this point, but that's okay.

79
00:03:41,170 --> 00:03:44,620
一个关键词语是我们看到了layout_weight
One key phrase that we saw is this linear layout_weight.

80
00:03:44,620 --> 00:03:47,950
我们以前从未见过它 但是看起来这个是答案的关键
We haven't encountered this before, but it sounds important to the answer.

81
00:03:47,950 --> 00:03:49,640
于是我们复制之并Google一下
So lets copy it and Google search for

82
00:03:49,640 --> 00:03:52,005
以寻找更多的关于layout_weight的内容
more information Information about layout_weight.

83
00:03:52,005 --> 00:03:55,205
于是我们搜索linear layout layout_weight
So let's search for linear layout layout_weight.

84
00:03:55,205 --> 00:03:57,605
第一个结果是一篇关于linear layout的文章
The first result is an article for linear layout and

85
00:03:57,605 --> 00:04:01,285
在developer.android.com上面 我们打开它
it's on the developer.android.com site, so let's click on it.

86
00:04:01,285 --> 00:04:03,845
这个是一篇线性布局的文章
So this is an article about the Linear Layout.

87
00:04:03,845 --> 00:04:08,015
我们已经学习了在上面有关Android方向属性的东西
We already learned the stuff at the top about the Android orientation attribute,

88
00:04:08,015 --> 00:04:11,230
但是仍然有新的东西 叫做布局权重(Layout Weight)
but then there's new information about something called Layout Weight.

89
00:04:11,230 --> 00:04:14,270
底下还有一个新的例子 还有一些代码
There's also an example at the bottom of the screen here with some code and

90
00:04:14,270 --> 00:04:15,650
和截图
a screenshot.

91
00:04:15,650 --> 00:04:17,149
我可以为你总结所有这些
I could summarize all of this for

92
00:04:17,149 --> 00:04:21,260
但是我首先想给你一个机会自己尝试读这些文档
you, but first I want to give you a chance to read this document.

93
00:04:21,260 --> 00:04:23,710
试着自己搞明白他们在讲什么
And try to figure it out on your own.

94
00:04:23,710 --> 00:04:26,180
这和你自己去解决问题的情况很相似
This is going to be a lot more similar to how you're going to solve problems

95
00:04:26,180 --> 00:04:28,220
而这往往在课堂之外
after this course is over.

96
00:04:28,220 --> 00:04:30,510
你会在网上查找一些资料并且
You'll look for some information online and

97
00:04:30,510 --> 00:04:34,500
试着去理解怎么应用于解决我的问题
try to figure out how that can be used to solve your problem.

98
00:04:34,500 --> 00:04:37,340
好 这是一个我们在设备上已经有的布局
Okay, so this is the layout that we have now on the device.

99
00:04:37,340 --> 00:04:39,120
这是我们想要达到的效果
And this is what we want to achieve.

100
00:04:39,120 --> 00:04:42,780
这三个text在我们的设备上的高度均衡分布
The three texts are spread-out evenly across the height of the device.

101
00:04:42,780 --> 00:04:43,720
为解决这个问题
To solve this problem,

102
00:04:43,720 --> 00:04:47,830
我想让你阅读我们在下方的Linear Layout文章的链接
I want you to read the Linear Layout article that we linked below.

103
00:04:47,830 --> 00:04:48,980
这完全符合你
It's perfectly normal for

104
00:04:48,980 --> 00:04:52,490
不理解文章内容的境况
you to not understand everything that's in the article.

105
00:04:52,490 --> 00:04:55,390
通常你只是想要对文章有一个大致的了解
Often times you just want to have some vague understanding

106
00:04:55,390 --> 00:05:00,320
并希望能把其中概念用于帮助你的实际工作
of how the concepts in the article may be able to help you in your work.

107
00:05:00,320 --> 00:05:03,390
然后我就会给你一些点子 帮助你在XML里面
Then I want you to provide some ideas on how we can build this desired

108
00:05:03,390 --> 00:05:05,100
构建理想的XML
layout in XML.

109
00:05:05,100 --> 00:05:07,550
你没必要提供所有的XML布局代码
You don't need to provide the full XML layout code

110
00:05:07,550 --> 00:05:10,420
我们会在下一个视频里一起解决
because we're going to walk through that together in the next video.

111
00:05:10,420 --> 00:05:12,350
但是你可以写下一两句话
But here you could write a couple sentences or

112
00:05:12,350 --> 00:05:12,355
或是一些点子 告诉我们这文章里的信息怎么与我们的问题相联系
bullet points on how the information in the article could relate to our problem
